name: publish

on:
  push:
    tags:
      - '*'

jobs:
  publish:
    runs-on: ubuntu-latest
    permissions:
      actions: read
      checks: write
      issues: read
      packages: write
      pull-requests: read
      repository-projects: read
      statuses: read
    steps:
      - uses: actions/checkout@master
      - name: Install Go
        uses: actions/setup-go@master
        with:
          go-version: 1.21.x
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
#      - name: Login to Docker Registry
#        uses: docker/login-action@v3
#        with:
#          username: ${{ github.repository_owner }}
#          password: ${{ secrets.GITHUB_TOKEN }}
#          registry: ghcr.io
      # 登录镜像仓库
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          registry: ${{ secrets.DOCKER_REGISTRY }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Get TAG
        id: get_tag
        run: echo TAG=${GITHUB_REF#refs/tags/} >> $GITHUB_ENV

      - name: Get git commit
        id: get_git_commit
        run: echo "GIT_COMMIT=$(git rev-parse HEAD)" >> $GITHUB_ENV
      - name: Get version
        id: get_version
        run: echo "VERSION=$(git describe --tags --dirty)" >> $GITHUB_ENV
      - name: Get Repo Owner
        id: get_repo_owner
        run: echo "REPO_OWNER=$(echo ${{ github.repository_owner }} | tr '[:upper:]' '[:lower:]')" > $GITHUB_ENV


      - name: Push containers
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          outputs: "type=registry,push=true"
          platforms: linux/amd64,linux/arm/v7,linux/arm64
          build-args: |
            GIT_COMMIT=${{env.GIT_COMMIT}}
            VERSION=${{env.VERSION}}
          tags: |
            ${{ secrets.DOCKER_REGISTRY }}/${{ secrets.DOCKER_REGISTRY_OPENFAAS_NAMESPACE }}/faas-netes:${{ github.sha }}
            ${{ secrets.DOCKER_REGISTRY }}/${{ secrets.DOCKER_REGISTRY_OPENFAAS_NAMESPACE }}/faas-netes:${{ env.TAG }}
            ${{ secrets.DOCKER_REGISTRY }}/${{ secrets.DOCKER_REGISTRY_OPENFAAS_NAMESPACE }}/faas-netes:latest

      - name: Print push docker image name
        id: print_push_docker_image_name
        run: echo "上传镜像名称：${{ secrets.DOCKER_REGISTRY }}/${{ secrets.DOCKER_REGISTRY_OPENFAAS_NAMESPACE }}/faas-netes:${{ env.TAG }}"